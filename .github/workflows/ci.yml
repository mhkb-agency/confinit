name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint_type:
    name: Lint and type-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dev dependencies
        run: uv sync --group dev

      - name: Ruff (lint)
        run: uv run ruff check .

      - name: Ruff (format check)
        run: uv run ruff format --check .

      - name: MyPy (type-check)
        run: uv run mypy src

  tests:
    name: Tests (pytest + coverage)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12', '3.13' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dev dependencies
        run: uv sync --group dev

      - name: Run tests with coverage
        run: >-
          uv run pytest -q
          --cov=src/confinit
          --cov-report=term-missing
          --cov-report=xml
          --cov-fail-under=95

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  perf:
    name: Performance checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dev dependencies
        run: uv sync --group dev

      - name: Run repository benchmark (if present)
        if: hashFiles('scripts/bench.*') != ''
        run: |
          if [ -f scripts/bench.sh ]; then bash scripts/bench.sh; fi
          if [ -f scripts/bench.py ]; then uv run python scripts/bench.py; fi

      # Publishing to PyPI removed from CI
